{"ast":null,"code":"var _jsxFileName = \"/Users/kshitizbali/Documents/REACT/react-complete-guide-2/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState('2019');\n  const [currentExpenses, setCurrentExpenses] = useState(props.items);\n\n  const saveSelectedExpenseYearHandler = enteredYearSelectedData => {\n    console.log(enteredYearSelectedData);\n    setSelectedYear(enteredYearSelectedData); //setCurrentExpenses((prevExpenses) => {\n    //const filteredList = \n\n    const fullYear = new Date(currentExpenses[0].date);\n    const stringYear = new String(currentExpenses[0].date);\n    console.log(fullYear);\n    console.log(stringYear);\n\n    if (stringYear.includes('2020')) {\n      console.log(true);\n    } else {}\n\n    console.log(selectedYear);\n    currentExpenses.filter(expense => expense.date == new Date(selectedYear).getFullYear);\n    console.log(currentExpenses);\n    return [currentExpenses]; //});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: selectedYear,\n        onSaveSelectedExpenseYear: saveSelectedExpenseYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), currentExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"rET3N0jZVUqXq34A368dbqQDMEk=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","selectedYear","setSelectedYear","currentExpenses","setCurrentExpenses","items","saveSelectedExpenseYearHandler","enteredYearSelectedData","console","log","fullYear","Date","date","stringYear","String","includes","filter","expense","getFullYear","map","title","amount","id"],"sources":["/Users/kshitizbali/Documents/REACT/react-complete-guide-2/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\n\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState('2019');\n  const [currentExpenses, setCurrentExpenses] = useState(props.items)\n  const saveSelectedExpenseYearHandler = (enteredYearSelectedData) => {\n    console.log(enteredYearSelectedData)\n    setSelectedYear(enteredYearSelectedData);\n    //setCurrentExpenses((prevExpenses) => {\n      //const filteredList = \n      const fullYear = new Date(currentExpenses[0].date);\n      const stringYear = new String(currentExpenses[0].date);\n      console.log(fullYear);\n      console.log(stringYear)\n      if(stringYear.includes('2020')){\n        console.log(true);\n      }else {\n        \n      }\n      console.log(selectedYear);\n      currentExpenses.filter( expense => expense.date == new Date(selectedYear).getFullYear)\n      console.log(currentExpenses)\n      return [currentExpenses]\n    //});\n  };\n\n  return (\n    <div>\n    <Card className=\"expenses\">\n    <ExpensesFilter selected={selectedYear} onSaveSelectedExpenseYear={saveSelectedExpenseYearHandler}/>\n    {currentExpenses.map((expense) =>  <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      /> )}\n      {/* <ExpenseItem\n        title={props.items[0].title}\n        amount={props.items[0].amount}\n        date={props.items[0].date}\n      />\n      <ExpenseItem\n        title={props.items[1].title}\n        amount={props.items[1].amount}\n        date={props.items[1].date}\n      />\n      <ExpenseItem\n        title={props.items[2].title}\n        amount={props.items[2].amount}\n        date={props.items[2].date}\n      />\n      <ExpenseItem\n        title={props.items[3].title}\n        amount={props.items[3].amount}\n        date={props.items[3].date}\n      /> */}\n    </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;EACA,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACK,KAAK,CAACK,KAAP,CAAtD;;EACA,MAAMC,8BAA8B,GAAIC,uBAAD,IAA6B;IAClEC,OAAO,CAACC,GAAR,CAAYF,uBAAZ;IACAL,eAAe,CAACK,uBAAD,CAAf,CAFkE,CAGlE;IACE;;IACA,MAAMG,QAAQ,GAAG,IAAIC,IAAJ,CAASR,eAAe,CAAC,CAAD,CAAf,CAAmBS,IAA5B,CAAjB;IACA,MAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAWX,eAAe,CAAC,CAAD,CAAf,CAAmBS,IAA9B,CAAnB;IACAJ,OAAO,CAACC,GAAR,CAAYC,QAAZ;IACAF,OAAO,CAACC,GAAR,CAAYI,UAAZ;;IACA,IAAGA,UAAU,CAACE,QAAX,CAAoB,MAApB,CAAH,EAA+B;MAC7BP,OAAO,CAACC,GAAR,CAAY,IAAZ;IACD,CAFD,MAEM,CAEL;;IACDD,OAAO,CAACC,GAAR,CAAYR,YAAZ;IACAE,eAAe,CAACa,MAAhB,CAAwBC,OAAO,IAAIA,OAAO,CAACL,IAAR,IAAgB,IAAID,IAAJ,CAASV,YAAT,EAAuBiB,WAA1E;IACAV,OAAO,CAACC,GAAR,CAAYN,eAAZ;IACA,OAAO,CAACA,eAAD,CAAP,CAjBgE,CAkBlE;EACD,CAnBD;;EAqBA,oBACE;IAAA,uBACA,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACA,QAAC,cAAD;QAAgB,QAAQ,EAAEF,YAA1B;QAAwC,yBAAyB,EAAEK;MAAnE;QAAA;QAAA;QAAA;MAAA,QADA,EAECH,eAAe,CAACgB,GAAhB,CAAqBF,OAAD,iBAAc,QAAC,WAAD;QAE/B,KAAK,EAAEA,OAAO,CAACG,KAFgB;QAG/B,MAAM,EAAEH,OAAO,CAACI,MAHe;QAI/B,IAAI,EAAEJ,OAAO,CAACL;MAJiB,GAC1BK,OAAO,CAACK,EADkB;QAAA;QAAA;QAAA;MAAA,QAAlC,CAFD;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAzDD;;GAAMvB,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}